const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/1-timer-CeDJfad9.js","assets/vendor-BbSUbo7J.js","assets/vendor-C1gPI-5C.css","assets/2-snackbar-C8WqBGa3.css"])))=>i.map(i=>d[i]);
(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const t of r.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&a(t)}).observe(document,{childList:!0,subtree:!0});function l(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(e){if(e.ep)return;e.ep=!0;const r=l(e);fetch(e.href,r)}})();const y="modulepreload",E=function(c){return"/goit-advancedjs-hw-02/"+c},d={},f=function(o,l,a){let e=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName("link");const t=document.querySelector("meta[property=csp-nonce]"),n=(t==null?void 0:t.nonce)||(t==null?void 0:t.getAttribute("nonce"));e=Promise.allSettled(l.map(s=>{if(s=E(s),s in d)return;d[s]=!0;const u=s.endsWith(".css"),h=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${s}"]${h}`))return;const i=document.createElement("link");if(i.rel=u?"stylesheet":y,u||(i.as="script"),i.crossOrigin="",i.href=s,n&&i.setAttribute("nonce",n),document.head.appendChild(i),u)return new Promise((p,g)=>{i.addEventListener("load",p),i.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${s}`)))})}))}function r(t){const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=t,window.dispatchEvent(n),!n.defaultPrevented)throw t}return e.then(t=>{for(const n of t||[])n.status==="rejected"&&r(n.reason);return o().catch(r)})},m=Object.assign({"./1-timer.js":()=>f(()=>import("./1-timer-CeDJfad9.js"),__vite__mapDeps([0,1,2])),"./2-snackbar.js":()=>f(()=>Promise.resolve({}),__vite__mapDeps([3]))});for(const c in m)m[c]().then(o=>{console.log(`Loaded module: ${c}`,o)}).catch(o=>{console.error(`Error loading module: ${c}`,o)});
//# sourceMappingURL=main-CPTnIMKe.js.map
